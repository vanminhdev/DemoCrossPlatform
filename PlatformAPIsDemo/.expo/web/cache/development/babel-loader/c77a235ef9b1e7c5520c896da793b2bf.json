{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Colors = _interopRequireDefault(require(\"./Colors\"));\n\nvar _openURLInBrowser = _interopRequireDefault(require(\"react-native/Libraries/Core/Devtools/openURLInBrowser\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\school\\\\Ph\\xE1t tri\\u1EC3n \\u1EE9ng d\\u1EE5ng \\u0111a n\\u1EC1n t\\u1EA3ng\\\\Code\\\\PlatformAPIs\\\\node_modules\\\\react-native\\\\Libraries\\\\NewAppScreen\\\\components\\\\LearnMoreLinks.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar links = [{\n  id: 1,\n  title: 'The Basics',\n  link: 'https://reactnative.dev/docs/tutorial',\n  description: 'Explains a Hello World for React Native.'\n}, {\n  id: 2,\n  title: 'Style',\n  link: 'https://reactnative.dev/docs/style',\n  description: 'Covers how to use the prop named style which controls the visuals.'\n}, {\n  id: 3,\n  title: 'Layout',\n  link: 'https://reactnative.dev/docs/flexbox',\n  description: 'React Native uses flexbox for layout, learn how it works.'\n}, {\n  id: 4,\n  title: 'Components',\n  link: 'https://reactnative.dev/docs/components-and-apis',\n  description: 'The full list of components and APIs inside React Native.'\n}, {\n  id: 5,\n  title: 'Navigation',\n  link: 'https://reactnative.dev/docs/navigation',\n  description: 'How to handle moving between screens inside your application.'\n}, {\n  id: 6,\n  title: 'Networking',\n  link: 'https://reactnative.dev/docs/network',\n  description: 'How to use the Fetch API in React Native.'\n}, {\n  id: 7,\n  title: 'Help',\n  link: 'https://reactnative.dev/help',\n  description: 'Need more help? There are many other React Native developers who may have the answer.'\n}, {\n  id: 8,\n  title: 'Follow us on Twitter',\n  link: 'https://twitter.com/reactnative',\n  description: 'Stay in touch with the community, join in on Q&As and more by following React Native on Twitter.'\n}];\n\nvar LinkList = function LinkList() {\n  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';\n  return (0, _jsxRuntime.jsx)(_reactNative.View, {\n    style: styles.container,\n    children: links.map(function (_ref) {\n      var id = _ref.id,\n          title = _ref.title,\n          link = _ref.link,\n          description = _ref.description;\n      return (0, _jsxRuntime.jsxs)(_react.Fragment, {\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [styles.separator, {\n            backgroundColor: isDarkMode ? _Colors.default.dark : _Colors.default.light\n          }]\n        }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n          accessibilityRole: \"button\",\n          onPress: function onPress() {\n            return (0, _openURLInBrowser.default)(link);\n          },\n          style: styles.linkContainer,\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: styles.link,\n            children: title\n          }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: [styles.description, {\n              color: isDarkMode ? _Colors.default.lighter : _Colors.default.dark\n            }],\n            children: description\n          })]\n        })]\n      }, id);\n    })\n  });\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginTop: 32,\n    paddingHorizontal: 24\n  },\n  linkContainer: {\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8\n  },\n  link: {\n    flex: 2,\n    fontSize: 18,\n    fontWeight: '400',\n    color: _Colors.default.primary\n  },\n  description: {\n    flex: 3,\n    paddingVertical: 16,\n    fontWeight: '400',\n    fontSize: 18\n  },\n  separator: {\n    height: _reactNative.StyleSheet.hairlineWidth\n  }\n});\n\nvar _default = LinkList;\nexports.default = _default;","map":{"version":3,"names":["links","id","title","link","description","LinkList","isDarkMode","useColorScheme","styles","container","map","separator","backgroundColor","Colors","dark","light","openURLInBrowser","linkContainer","color","lighter","StyleSheet","create","marginTop","paddingHorizontal","flexWrap","flexDirection","justifyContent","alignItems","paddingVertical","flex","fontSize","fontWeight","primary","height","hairlineWidth"],"sources":["D:/school/Phát triển ứng dụng đa nền tảng/Code/PlatformAPIs/node_modules/react-native/Libraries/NewAppScreen/components/LearnMoreLinks.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Colors from './Colors';\nimport type {Node} from 'react';\nimport openURLInBrowser from 'react-native/Libraries/Core/Devtools/openURLInBrowser';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useColorScheme,\n  View,\n} from 'react-native';\nimport React, {Fragment} from 'react';\n\nconst links = [\n  {\n    id: 1,\n    title: 'The Basics',\n    link: 'https://reactnative.dev/docs/tutorial',\n    description: 'Explains a Hello World for React Native.',\n  },\n  {\n    id: 2,\n    title: 'Style',\n    link: 'https://reactnative.dev/docs/style',\n    description:\n      'Covers how to use the prop named style which controls the visuals.',\n  },\n  {\n    id: 3,\n    title: 'Layout',\n    link: 'https://reactnative.dev/docs/flexbox',\n    description: 'React Native uses flexbox for layout, learn how it works.',\n  },\n  {\n    id: 4,\n    title: 'Components',\n    link: 'https://reactnative.dev/docs/components-and-apis',\n    description: 'The full list of components and APIs inside React Native.',\n  },\n  {\n    id: 5,\n    title: 'Navigation',\n    link: 'https://reactnative.dev/docs/navigation',\n    description:\n      'How to handle moving between screens inside your application.',\n  },\n  {\n    id: 6,\n    title: 'Networking',\n    link: 'https://reactnative.dev/docs/network',\n    description: 'How to use the Fetch API in React Native.',\n  },\n  {\n    id: 7,\n    title: 'Help',\n    link: 'https://reactnative.dev/help',\n    description:\n      'Need more help? There are many other React Native developers who may have the answer.',\n  },\n  {\n    id: 8,\n    title: 'Follow us on Twitter',\n    link: 'https://twitter.com/reactnative',\n    description:\n      'Stay in touch with the community, join in on Q&As and more by following React Native on Twitter.',\n  },\n];\n\nconst LinkList = (): Node => {\n  const isDarkMode = useColorScheme() === 'dark';\n  return (\n    <View style={styles.container}>\n      {links.map(({id, title, link, description}) => (\n        <Fragment key={id}>\n          <View\n            style={[\n              styles.separator,\n              {\n                backgroundColor: isDarkMode ? Colors.dark : Colors.light,\n              },\n            ]}\n          />\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            onPress={() => openURLInBrowser(link)}\n            style={styles.linkContainer}>\n            <Text style={styles.link}>{title}</Text>\n            <Text\n              style={[\n                styles.description,\n                {\n                  color: isDarkMode ? Colors.lighter : Colors.dark,\n                },\n              ]}>\n              {description}\n            </Text>\n          </TouchableOpacity>\n        </Fragment>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  linkContainer: {\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n  },\n  link: {\n    flex: 2,\n    fontSize: 18,\n    fontWeight: '400',\n    color: Colors.primary,\n  },\n  description: {\n    flex: 3,\n    paddingVertical: 16,\n    fontWeight: '400',\n    fontSize: 18,\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default LinkList;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}